# THIS FILE WAS AUTO GENERATED FROM THE K8S SWAGGER SPEC

require "yaml"
require "json"
require "any_hash"

module K8S::Types::Apimachinery::Apis::Meta::V1::APIGroupList; end

require "./api_group"

module K8S
  # Namespace holding the types for `Apimachinery::Apis::Meta::V1::APIGroupList`.
  #
  # NOTE: Module auto-generated by `AnyHash.define_new`.
  module Types::Apimachinery::Apis::Meta::V1::APIGroupList
    alias Key = String
    alias ValueType = String | ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup) | Nil
    # alias Value = ValueType | Array(Value) | Set(Value) | Hash(Key, Value)
    alias Instance = ::AnyHash(Key, ValueType)

    # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: [[https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources)](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources))
    abstract def api_version : String?
    # :ditto:
    abstract def api_version! : String
    # :ditto:
    abstract def api_version? : String?
    # :ditto:
    abstract def api_version=(value : String?)
    # groups is a list of APIGroup.
    abstract def groups : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)
    # :ditto:
    abstract def groups! : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)
    # :ditto:
    abstract def groups? : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)?
    # :ditto:
    abstract def groups=(value : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup))
    # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: [[https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds)](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds))
    abstract def kind : String?
    # :ditto:
    abstract def kind! : String
    # :ditto:
    abstract def kind? : String?
    # :ditto:
    abstract def kind=(value : String?)
  end

  # APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
  @[::K8S::GroupVersionKind(group: "", kind: "APIGroupList", version: "v1", full: "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList")]
  @[::K8S::Properties(
    api_version: {key: "apiVersion", accessor: "api_version", kind: "String", nilable: true, default: nil, read_only: false, description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: [https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources)"},
    groups: {key: "groups", accessor: "groups", kind: "::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)", nilable: false, default: nil, read_only: false, description: "groups is a list of APIGroup."},
    kind: {key: "kind", accessor: "kind", kind: "String", nilable: true, default: nil, read_only: false, description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: [https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds)"},
  )]
  class Apimachinery::Apis::Meta::V1::APIGroupList < ::K8S::Types::Apimachinery::Apis::Meta::V1::APIGroupList::Instance
    include ::K8S::Types::Apimachinery::Apis::Meta::V1::APIGroupList
    include ::K8S::Kubernetes::Object

    # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: [[https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources)](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources))
    def api_version : String?
      self.["apiVersion"].as(String?)
    end

    # :ditto:
    def api_version! : String
      self.["apiVersion"].as(String?).not_nil!
    end

    # :ditto:
    def api_version? : String?
      self.["apiVersion"]?.as(String?)
    end

    # :ditto:
    def api_version=(value : String?)
      self.["apiVersion"] = value
    end

    # groups is a list of APIGroup.
    def groups : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)
      self.["groups"].as(::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup))
    end

    # :ditto:
    def groups! : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)
      self.["groups"].as(::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)).not_nil!
    end

    # :ditto:
    def groups? : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)?
      self.["groups"]?.as(::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup)?)
    end

    # :ditto:
    def groups=(value : ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup))
      self.["groups"] = value
    end

    # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: [[https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds)](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds))
    def kind : String?
      self.["kind"].as(String?)
    end

    # :ditto:
    def kind! : String
      self.["kind"].as(String?).not_nil!
    end

    # :ditto:
    def kind? : String?
      self.["kind"]?.as(String?)
    end

    # :ditto:
    def kind=(value : String?)
      self.["kind"] = value
    end

    macro finished
      ::K8S::Kubernetes::Resource.define_serialize_methods([
        { key: "apiVersion", accessor: "api_version", nilable: true, read_only: false, default: nil, kind: String },
        { key: "groups", accessor: "groups", nilable: false, read_only: false, default: nil, kind: ::Array(::K8S::Apimachinery::Apis::Meta::V1::APIGroup) },
        { key: "kind", accessor: "kind", nilable: true, read_only: false, default: nil, kind: String },
      ])
end
  end
end
