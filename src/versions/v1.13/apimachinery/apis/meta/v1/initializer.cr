# THIS FILE WAS AUTO GENERATED FROM THE K8S SWAGGER SPEC

require "yaml"
require "json"
require "any_hash"

module K8S::Types::Apimachinery::Apis::Meta::V1::Initializer; end

module K8S
  # Namespace holding the types for `Apimachinery::Apis::Meta::V1::Initializer`.
  #
  # NOTE: Module auto-generated by `AnyHash.define_new`.
  module Types::Apimachinery::Apis::Meta::V1::Initializer
    alias Key = String
    alias ValueType = String | Nil
    # alias Value = ValueType | Array(Value) | Set(Value) | Hash(Key, Value)
    alias Instance = ::AnyHash(Key, ValueType)

    # name of the process that is responsible for initializing this object.
    abstract def name : String
    # :ditto:
    abstract def name! : String
    # :ditto:
    abstract def name? : String?
    # :ditto:
    abstract def name=(value : String)
  end

  # Initializer is information about an initializer that has not yet completed.
  @[::K8S::Properties(
    name: {key: "name", accessor: "name", kind: "String", nilable: false, default: nil, read_only: false, description: "name of the process that is responsible for initializing this object."},
  )]
  class Apimachinery::Apis::Meta::V1::Initializer < ::K8S::Types::Apimachinery::Apis::Meta::V1::Initializer::Instance
    include ::K8S::Types::Apimachinery::Apis::Meta::V1::Initializer
    include ::K8S::Kubernetes::Object

    # name of the process that is responsible for initializing this object.
    def name : String
      self.["name"].as(String)
    end

    # :ditto:
    def name! : String
      self.["name"].as(String).not_nil!
    end

    # :ditto:
    def name? : String?
      self.["name"]?.as(String?)
    end

    # :ditto:
    def name=(value : String)
      self.["name"] = value
    end

    macro finished
      ::K8S::Kubernetes::Resource.define_serialize_methods([
        { key: "name", accessor: "name", nilable: false, read_only: false, default: nil, kind: String },
      ])
end
  end
end
